if (!isNeedDemoModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.0.5'
    }
    defaultConfig {
        if (!isNeedLoginModule.toBoolean()) {
            applicationId "com.life.demo"
        }
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
        sourceSets {
            main {
                if (!isNeedLoginModule.toBoolean()) {
                    // Module模式下使用debug文件夹中的清单文件
                    manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                } else {
                    // Release模式下使用main文件夹中的清单文件
                    manifest.srcFile 'src/main/AndroidManifest.xml'
                    // Release模式下排除debug文件夹中的Java文件
                    java {
                        exclude 'debug/**'
                    }
                }
            }
        }
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation project(':base')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    kapt rootProject.ext.dependencies["arouter-compiler"]
    annotationProcessor rootProject.ext.dependencies.arouter
    implementation rootProject.ext.dependencies.ktx
    implementation rootProject.ext.dependencies["ktx-jdk"]
    api 'androidx.compose.ui:ui:1.0.5'
    // Tooling support (Previews, etc.)
    api 'androidx.compose.ui:ui-tooling:1.0.5'
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    api 'androidx.compose.foundation:foundation:1.0.5'
    // Material Design
    api 'androidx.compose.material:material:1.0.5'
    // Material design icons
    api 'androidx.compose.material:material-icons-core:1.0.5'
    api 'androidx.compose.material:material-icons-extended:1.0.5'
    // Integration with activities
    api 'androidx.activity:activity-compose:1.3.1'
    // Integration with ViewModels
    api 'androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07'
    // Integration with observables
    api 'androidx.compose.runtime:runtime-livedata:1.0.5'
    api 'androidx.compose.runtime:runtime-rxjava2:1.0.5'
    // hilt
    api "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"

}
repositories {
    mavenCentral()
}
